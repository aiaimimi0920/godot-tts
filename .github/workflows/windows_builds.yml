name: üèÅ Windows Builds
on:
  workflow_call:

env:
  Gflags_ROOT: "${{github.workspace}}/gflags"
  Gflags_INCLUDE_DIR: "${{ github.workspace }}/gflags/include"
  Gflags_LIBRARY: "${{github.workspace}}/gflags/lib/gflags.lib"
  Glog_ROOT: "${{github.workspace}}/glog"
  Glog_INCLUDE_DIR: "${{ github.workspace }}/glog/include"
  Glog_LIBRARY: "${{github.workspace}}/glog/lib/glog.lib"
  # Openfst_ROOT: "${{github.workspace}}/openfst"
  # Openfst_INCLUDE_DIR: "${{ github.workspace }}/openfst/include"
  # Openfst_LIBRARY: "${{github.workspace}}/openfst/lib/fst.lib"

jobs:
  build-windows:
    runs-on: ${{matrix.os}}
    name: Windows Build ${{ matrix.arch }}
    defaults:
      run:
        shell: powershell
    env:
      # CL: /MP
      CMAKE_GENERATOR: ${{matrix.generator}}
      CMAKE_GENERATOR_PLATFORM: ${{matrix.arch}}
    strategy:
      fail-fast: true
      matrix:
        arch: [x64]
        build_type: [Release]
        lib: [shared]
        include:
          - msvc: VS-17-2022
            os: windows-2022
            generator: 'Visual Studio 17 2022'
            marker: vc17
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          fetch-depth: 0
      - name: Install MSVC compiler
        uses: ilammy/msvc-dev-cmd@v1.12.1
        with:
          vsversion: '2022'

      - name: Setup MSVC problem matcher
        uses: ammaraskar/msvc-problem-matcher@master

      # - name: Install Conan
      #   # You may pin to the exact commit or the version.
      #   # uses: turtlebrowser/get-conan@368dfd1b36f811723d7db981352dd77cd69c2c9e
      #   id: conan
      #   uses: turtlebrowser/get-conan@main
      #   with:
      #     version: 1.59.0

      # - name: Create default profile
      #   run: conan profile new default --detect

      # - name: Cache openfst
      #   id: cache-openfst
      #   uses: actions/cache@v3
      #   with:
      #       path: openfst/
      #       key: ${{runner.os}}-openfst-1.7.2-${{matrix.arch}}-${{matrix.build_type}}
      # - name: Download openfst
      #   if: steps.cache-openfst.outputs.cache-hit != 'true'
      #   run: |
      #       Invoke-WebRequest -Uri "https://github.com/aiaimimi0920/openfst/archive/a41bf3c.zip" -OutFile "openfst-1.7.2.zip"
      #       Expand-Archive openfst-1.7.2.zip .
      #       Rename-Item -Path .\openfst-a41bf3c00694cbd08a5d885533c5af83a89d49bd -NewName openfst-1.7.2

      # - name: Install dependencies
      #   run: conan install openfst-1.7.2 -s build_type=${{matrix.build_type}} -if build-openfst --build=missing

      # - name: Build openfst
      #   if: steps.cache-openfst.outputs.cache-hit != 'true'
      #   run: |
      #       cmake -S openfst-1.7.2 -B build-openfst `
      #         -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/openfst
      #       cmake --build build-openfst `
      #             --target install
      #   env:
      #     CMAKE_BUILD_PARALLEL_LEVEL: 1

      - name: Cache gflags
        id: cache-gflags
        uses: actions/cache@v3
        with:
          path: gflags/
          key: ${{runner.os}}-gflags-2.2.2-${{matrix.arch}}-${{matrix.build_type}}

      - name: Download gflags
        if: steps.cache-gflags.outputs.cache-hit != 'true'
        run: |
          (New-Object System.Net.WebClient).DownloadFile("https://github.com/gflags/gflags/archive/refs/tags/v2.2.2.zip", "v2.2.2.zip")
          Expand-Archive v2.2.2.zip .
      - name: Build gflags
        if: steps.cache-gflags.outputs.cache-hit != 'true'
        run: |
          cmake -S gflags-2.2.2 -B build-gflags `
                -DBUILD_SHARED_LIBS=ON `
                -DBUILD_TESTING=OFF `
                -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/gflags
          cmake --build build-gflags `
                --config ${{matrix.build_type}} `
                --target install
      - name: Cache glog
        id: cache-glog
        uses: actions/cache@v3
        with:
            path: glog/
            key: ${{runner.os}}-glog-0.6.0-${{matrix.arch}}-${{matrix.build_type}}

      - name: Download glog
        if: steps.cache-glog.outputs.cache-hit != 'true'
        run: |
            (New-Object System.Net.WebClient).DownloadFile("https://github.com/google/glog/archive/refs/tags/v0.6.0.zip", "glog-0.6.0.zip")
            Expand-Archive glog-0.6.0.zip .
      - name: Build glog
        if: steps.cache-glog.outputs.cache-hit != 'true'
        run: |
            cmake -S glog-0.6.0 -B build-glog `
                -A ${{matrix.arch}} `
                -DBUILD_SHARED_LIBS=ON `
                -DWITH_GTEST=OFF `
                -DWITH_PKGCONFIG=OFF `
                -DBUILD_TESTING=OFF `
                -DCMAKE_PREFIX_PATH="${{github.workspace}}/gflags" `
                -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/glog
            cmake --build build-glog `
                --config ${{matrix.build_type}} `
                --target install

      - name: Build ${{ matrix.arch }}
        uses: ./.github/actions/build
        with:
          arch: ${{ matrix.arch }}
          platform: windows
        env:
          CMAKE_BUILD_PARALLEL_LEVEL: 1

      - name: Upload ${{ matrix.arch }}
        uses: ./.github/actions/upload
